---
- name: Check if kafka already exists
  stat: path= /home/{{ ansible_ssh_user }}/keshab/kafka_2.11-1.1.0.tgz
  register: kafka_tar_exists

- name: Download kafka
  get_url:
    url: https://archive.apache.org/dist/kafka/1.1.0/kafka_2.11-1.1.0.tgz
    dest: /home/{{ ansible_ssh_user }}/keshab
  when: not kafka_tar_exists.stat.exists

- name: Check if the Untar is done
  stat: path= /home/{{ ansible_ssh_user }}/keshab/kafka_2.11-1.1.0
  register: kafka_file_exists

- name: Untar the binary file
  become: yes
  unarchive: 
    src: /home/{{ ansible_ssh_user }}/keshab/kafka_2.11-1.1.0.tgz
    dest: /home/{{ ansible_ssh_user }}/keshab/
    copy: no
  when: not kafka_file_exists.stat.exists

- name: Fix the ownership of kafka directory
  file: 
    path: /home/{{ ansible_ssh_user }}/keshab/kafka_2.11-1.1.0/
    recurse: yes
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0775
- name: Creates the directory
  file: 
    path: /home/{{ ansible_ssh_user }}/keshab/rdops/kafka/kafka-logs
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0775
    recurse: yes

- name: Create the zookeeper directory
  file: 
    path: /home/{{ ansible_ssh_user }}/keshab/zookeeper/data
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0775
    recurse: yes
- name: Create the file myid on node 1
  when: inventory_hostname in groups['pan1']
  copy:
    dest: /home/{{ ansible_ssh_user }}/keshab/zookeeper/data/myid
    content: "1"
    group: "{{ ansible_ssh_user }}"
    owner: "{{ ansible_ssh_user }}"
    mode: 0775

- name: Create the file myid on node 2
  when: inventory_hostname in groups['pan2']
  copy: 
    dest: /home/{{ ansible_ssh_user }}/keshab/zookeeper/data/myid
    content: "2"
    group: "{{ ansible_ssh_user }}"
    owner: "{{ ansible_ssh_user }}"
    mode: 0775

- name: Create the file myid on node 3
  when: inventory_hostname in groups['pan3']
  copy:
    dest: /home/{{ ansible_ssh_user }}/keshab/zookeeper/data/myid
    content: "3"
    group: "{{ ansible_ssh_user }}"
    owner: "{{ ansible_ssh_user }}"
    mode: 0775


    

#- name: remove the tar package
#  file: state=absent path=/opt/kafka_2.11-1.1.0.tgz
